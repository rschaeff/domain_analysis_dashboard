// Replace your current schema with this:

// Core protein and partition tables
model PartitionProteins {
  id                       Int      @id @default(autoincrement())
  pdb_id                   String
  chain_id                 String
  batch_id                 Int?
  timestamp                DateTime @default(now())
  reference_version        String?
  is_classified            Boolean  @default(false)
  sequence_length          Int      @default(0)
  coverage                 Float    @default(0)
  residues_assigned        Int      @default(0)
  domains_with_evidence    Int      @default(0)
  fully_classified_domains Int      @default(0)
  source_file_id           Int?
  process_version          String?

  // Relations
  domains       PartitionDomains[]
  references    PartitionProteinReferences[]
  comparisons   PartitionComparisonMetrics[]

  @@unique([pdb_id, chain_id, batch_id, timestamp], name: "unique_partition_version")
  @@map("partition_proteins")
  @@schema("pdb_analysis")
}

model PartitionDomains {
  id             Int      @id @default(autoincrement())
  protein_id     Int
  domain_number  Int?
  domain_id      String?
  start_pos      Int
  end_pos        Int
  range          String
  source         String?
  source_id      String?
  confidence     Float?
  t_group        String?
  h_group        String?
  x_group        String?
  a_group        String?
  is_manual_rep  Boolean  @default(false)
  is_f70         Boolean  @default(false)
  is_f40         Boolean  @default(false)
  is_f99         Boolean  @default(false)
  pdb_range      String?
  pdb_start      String?
  pdb_end        String?
  created_at     DateTime @default(now())

  // Relations
  protein        PartitionProteins      @relation(fields: [protein_id], references: [id], onDelete: Cascade)
  evidence       DomainEvidence[]
  comparisons    DomainComparisons[]

  @@unique([protein_id, domain_number], name: "unique_domain_in_partition")
  @@map("partition_domains")
  @@schema("pdb_analysis")
}

// Reference domain system (ECOD)
model Protein {
  id                Int     @id @default(autoincrement())
  unp_acc           String?
  source_id         String  @unique
  pdb_id            String
  chain_id          String
  name              String?
  type              String?
  tax_id            Int?
  length            Int?
  sequence_length   Int?
  is_nonident_rep   Boolean @default(false)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // Relations
  domains           Domain[]
  sequences         ProteinSequence[]
  structure         ProteinStructure?

  @@map("protein")
  @@schema("pdb_analysis")
}

model Domain {
  id              Int     @id @default(autoincrement())
  ecod_uid        Int?    @unique
  protein_id      Int?
  domain_id       String
  ecod_domain_id  String?
  range           String
  t_group         String?
  h_group         String?
  x_group         String?
  a_group         String?
  is_manual_rep   Boolean @default(false)
  is_f70          Boolean @default(false)
  is_f40          Boolean @default(false)
  is_f99          Boolean @default(false)
  hcount          Int?
  scount          Int?
  length          Int?
  chain_id        String?
  asym_id         String?
  pdb_range       String?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  // Relations
  protein         Protein? @relation(fields: [protein_id], references: [id], onDelete: Cascade)
  sequences       DomainSequence?
  dssp_detail     DomainDsspDetail?

  @@map("domain")
  @@schema("pdb_analysis")
}

// Add the view as a model (Prisma 5+ supports views)
model PartitionDomainSummary {
  id                      Int     @id
  protein_id              Int
  pdb_id                  String
  chain_id                String
  batch_id                Int?
  reference_version       String?
  timestamp               DateTime
  domain_number           Int?
  domain_id               String?
  start_pos               Int
  end_pos                 Int
  range                   String
  pdb_range               String?
  pdb_start               String?
  pdb_end                 String?
  source                  String?
  source_id               String?
  confidence              Float?
  t_group                 String?
  h_group                 String?
  x_group                 String?
  a_group                 String?
  evidence_count          BigInt
  evidence_types          String?

  @@map("partition_domain_summary")
  @@schema("pdb_analysis")
}
